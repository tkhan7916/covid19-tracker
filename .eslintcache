[{"/home/Khan/Programming/NodeJS/covid19-tracker/src/index.js":"1","/home/Khan/Programming/NodeJS/covid19-tracker/src/App.js":"2","/home/Khan/Programming/NodeJS/covid19-tracker/src/components/index.js":"3","/home/Khan/Programming/NodeJS/covid19-tracker/src/components/Cards/Cards.jsx":"4","/home/Khan/Programming/NodeJS/covid19-tracker/src/components/Chart/Chart.jsx":"5","/home/Khan/Programming/NodeJS/covid19-tracker/src/components/CountryPicker/CountryPicker.jsx":"6","/home/Khan/Programming/NodeJS/covid19-tracker/src/api/index.js":"7"},{"size":146,"mtime":1607453851125,"results":"8","hashOfConfig":"9"},{"size":1044,"mtime":1607495540429,"results":"10","hashOfConfig":"9"},{"size":173,"mtime":1607456336638,"results":"11","hashOfConfig":"9"},{"size":2580,"mtime":1607495540439,"results":"12","hashOfConfig":"9"},{"size":2249,"mtime":1607495540440,"results":"13","hashOfConfig":"9"},{"size":926,"mtime":1607495636724,"results":"14","hashOfConfig":"9"},{"size":1057,"mtime":1607495553905,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1pmvx83",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/Khan/Programming/NodeJS/covid19-tracker/src/index.js",[],["32","33"],"/home/Khan/Programming/NodeJS/covid19-tracker/src/App.js",[],"/home/Khan/Programming/NodeJS/covid19-tracker/src/components/index.js",[],"/home/Khan/Programming/NodeJS/covid19-tracker/src/components/Cards/Cards.jsx",[],"/home/Khan/Programming/NodeJS/covid19-tracker/src/components/Chart/Chart.jsx",["34"],"import React, {useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\n    const [dailyData_o, setDailyData] = useState([]);\n    const dailyData = dailyData_o.slice(0).reverse();\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length\n        ? (\n        <Line \n          data={{\n              labels: dailyData.map(({date}) => new Date(date).toLocaleDateString()),\n              datasets: [{\n                  data: dailyData.map((data) => data.confirmed),\n                  label: 'Infected',\n                  borderColor: '#3333ff',\n                  fill: true,\n              }, {\n                  data: dailyData.map((data) => data.recovered),\n                  label: 'Recovered',\n                  borderColor: 'green',\n                  backgroundColor: 'rgba(0, 255, 0, 0.5)',\n                  fill: true,\n              }, {\n                  data: dailyData.map((data) => data.deaths),\n                  label: 'Deaths',\n                  borderColor: 'red',\n                  backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                  fill: true,\n              }],\n          }}\n        />) : null\n    );\n\n    const barChart = (\n        confirmed\n        ? (\n            <Bar \n              data={{\n                  labels: ['Infected', 'Recovered', 'Deaths'],\n                  datasets: [{\n                      label: 'People',\n                      backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                      data: [confirmed.value, recovered.value, deaths.value]\n                  }]\n              }}\n              options={{\n                  legend: {display: false},\n                  title: {display: true, text: `Current state in ${country}`},\n              }}\n            />\n        ) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","/home/Khan/Programming/NodeJS/covid19-tracker/src/components/CountryPicker/CountryPicker.jsx",[],"/home/Khan/Programming/NodeJS/covid19-tracker/src/api/index.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":48,"column":11,"nodeType":"41","messageId":"42","endLine":48,"endColumn":19},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'barChart' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]